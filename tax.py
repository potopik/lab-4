def convert2(num2):  #Первая функция для описания первой части числа деленного на 1000 в словесной форме
    units2 = ("", "одна ", "две ", "три ", "четыре ", "пять ", "шесть ", "семь ", "восемь ", "девять ", "десять ",
              "одиннадцать ", "двенадцать ", "тринадцать ", "четырнадцать ", "пятнадцать ", "шестьнадцать ",
              "семнадцать ", "восемнадцать ", "девятьнадцать ")
    tens2 = ("", "", "двадцать ", "тридцать ", "сорок ", "пятьдесят ",
             "шестьдесят ", "семьдесят ", "восемьдесят ", "девяносто ")
    hundreds2 = ("", "сто ", "двести ", "тристо ", "четыресто ", "пятьсот ",
                 "шестьсот ", "семьсот ", "восемьсот ", "девятьсот ")
    if num2 < 20:
        return units2[num2]
    if num2 < 100:
        return tens2[num2 // 10] + units2[int(num2 % 10)]
    if num2 < 1000:
        return hundreds2[num2 // 100] + convert2(int(num2 % 100))


def convert(num): ##Вторая функция для описания второй части числа функции деленного на 1000 в словесной форме и обьеденинения 1 и 2 функциии
    units = ("", "один ", "два ", "три ", "четыре ", "пять ", "шесть ", "семь ", "восемь ", "девять ", "десять ",
             "одиннадцать ", "двенадцать ", "тринадцать ", "четырнадцать ", "пятнадцать ", "шестьнадцать ",
             "семнадцать ", "восемнадцать ", "девятьнадцать ")
    units1 = ("", "одна ", "две ", "три ", "четыре ")
    tens = ("", "", "двадцать ", "тридцать ", "сорок ", "пятьдесят ",
            "шестьдесят ", "семьдесят ", "восемьдесят ", "девяносто ")
    hundreds = ("", "сто ", "двести ", "тристо ", "четыресто ", "пятьсот ",
                "шестьсот ", "семьсот ", "восемьсот ", "девятьсот ")
    d = (num // 1000) % 10
    if num < 20:
        return units[num]
    if num < 100:
        return tens[num // 10] + units[int(num % 10)]
    if num < 1000:
        return hundreds[num // 100] + convert(int(num % 100))
    if num < 10000:
        if num < 2000:
            return units1[num // 1000] + "тысяча " + convert(int(num % 1000))
        if num < 5000:
            return units1[num // 1000] + "тысячи " + convert(int(num % 1000))
    if 20000 < num < 1000000 and d == 1:
        return convert2(num // 1000) + "тысяча " + convert(int(num % 1000))
    if 20000 < num < 100000 and 5 > d > 1:
        return convert2(num // 1000) + "тысячи " + convert(int(num % 1000))
    if 120000 < num < 1000000 and 5 > d > 1:
        return convert2(num // 1000) + "тысячи " + convert(int(num % 1000))
    if 120000 < num < 1000000 and d == 1:
        return convert2(num // 1000) + "тысяча " + convert(int(num % 1000))
    if num < 1000000:
        return convert2(num // 1000) + "тысяч " + convert(int(num % 1000))


def Bubl(a): #Обычная сортировка пузыриком.
    i=0
    while i < n - 1:
        j = 0
        while j < n - 1 - i:
            if a[j] > a[j + 1]:
                a[j], a[j + 1] = a[j + 1], a[j]
            j += 1
        i += 1


while True:
    try: #обработка ввода
        n = int(input("Введите количество сотрудников в компании (от 1 до 1000): "))
        if n > 1000 or n < 1:
            print('Ошибка ввода. Попробуйте еще раз')
        else:
            break
    except ArithmeticError:
        print('Ошибка ввода. Попробуйте еще раз')
    except BaseException:
        print('Ошибка ввода. Попробуйте ввести число от 1 до 1000')
while True:
    try: #обработка ввода
        km = list(map(int, input("Введите расстояние до дома сотрудников в километрах, используя пробел: ").split()))
        break
    except ValueError:
        print('Ошибка ввода. Попробуйте еще раз')
while True:
    try: #обработка ввода
        tarif = list(map(int, input("Введите тарифы такси за проезд одного километра, используя пробел: ").split()))
        break
    except ValueError:
        print('Ошибка ввода. Попробуйте еще раз')
summa = 0
skm = sorted(km)  #запись в переменную отсортированный список расстояний для нахождения общей стоимости
starif = sorted(tarif, reverse=True)  #запись в переменную отсортированный список тарифов для нахождения общей стоимости
for k in range(n): # Нахождение общей стоимости
    summa += starif[k]*skm[k]
for i in range(n): # Процесс заполнения массивов
    km[i] = (km[i], i + 1)
for i in range(n):
    tarif[i] = (-tarif[i], i + 1) #Даём отрицательные значения числам т.к. нам надо от наибольшего к наименьшему
Bubl(km)  # Сортируем людей по от наименьшего расстояния к наибольшему
Bubl(tarif)  # Сортируем цена от наибольшего к наименьшему
ans = [0] * (n + 1) #Создаёт список из n+1 элементо
for i in range(n):
    ans[km[i][1]] = tarif[i][1] #Соотносим наименьшее число с наибольшим
for i in range(1, n + 1):
    print('Сотрудник №{} должен сесть в такси под номером: '.format(i), ans[i],)
print('Необходимая сумма для оплаты такси:')
print(summa)
b = convert(summa) #Блок для конвертации числа в буквенную форму и выводе слова "рубля" в правильном склонении
if ((summa % 100) > 10) and ((summa % 100) < 15):
    print(b, "рублей")
elif summa % 10 == 1:
    print(b, "рубль")
elif ((summa % 10) > 1) and ((summa % 10) < 5):
    print(b, "рубля")
else:
    print(b, "рублей")
